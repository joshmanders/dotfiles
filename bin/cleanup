#!/usr/bin/env bash

not_found () {
  local args=("$@")
  echo "${args} command not found"
  echo
  echo
  echo "Available commands:"
  echo
  echo "dns: Flush out the DNS cache."
  echo "ds: Clean up pesky .DS_Store all over."
  echo "ls: Clean up multiple launch services."
  echo "logs: Clean up terminal log files."
  echo "containers: Clean up exited docker containers."
  echo "images: Clean up dangling docker images."
  echo
  exit 1
}

# Flush out the DNS cache.
dns () {
  dscacheutil -flushcache
}

# Clean up pesky .DS_Store all over.
ds () {
  find "${HOME}" -type f -name '*.DS_Store' -ls -delete
}

# Clean up multiple launch services.
ls () {
  /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user
  killall Finder
}

# Clean up terminal log files.
logs () {
  sudo rm -f /private/var/log/asl/*.asl
}

# Clean up exited docker containers.
containers () {
  docker ps -a | grep 'Exited' | awk '{print $1}' | docker rm -f
}

# Clean up dangling docker images.
images () {
  docker rmi $(docker images -f "dangling=true" -q)
}

main () {
  local args=("$@")

  case "$1" in
    dns) dns "${args[@]}" ;;
    ds) ds "${args[@]}" ;;
    ls) ls "${args[@]}" ;;
    logs) logs "${args[@]}" ;;
    containers) containers "${args[@]}" ;;
    images) images "${args[@]}" ;;
    *) not_found "${args[@]}" ;;
  esac
}

main "$@"
